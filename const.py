#!/usr/bin/env python
"""
:mod:`ppmac.const` -- Ppmac-related constants
========================================

.. module:: ppmac.const
.. moduleauthor:: Ken Lauer <klauer@bnl.gov>
"""

coord_errors = {
    1   : ('SyncBufferError',      'Error in synchronous variable assignment buffer'),
    2   : ('BufferError Error',    'in motion program buffer'),
    3   : ('CCMoveTypeError',      'Illegal move mode or command while cutter compensation active (rapid, pvt, spline, lin-to-pvt, new normal, pmatch, pclr, pset, pload)'),
    4   : ('LinToPvtError',        'Error in automatic linear-to-PVT-mode conversion'),
    5   : ('CCLeadOutMoveError',   'Illegal cutter compensation lead-out move (circle mode or length less than cutter radius)'),
    6   : ('CCLeadInMoveError',    'Illegal cutter compensation lead-in move (circle mode or length less than cutter radius)'),
    7   : ('CCBufSizeError',       'Insufficient size for cutter compensation move buffer (not enough to find next in-plane move)'),
    8   : ('PvtError',             'Illegally specified PVT-mode move'),
    9   : ('CCFeedRateError',      'Moves not specified by feedrate for cutter comp'),
    10  : ('CCDirChangeError',     'Compensated move in opposite direction from programmed move; indicates interference condition'),
    11  : ('CCNoSolutionError',    'No solution could be found for compensated move'),
    12  : ('CC3NdotTError',        '3D cutter compensation vector calculation error ("NdotT" value less than 1st entry in tool-tip table)'),
    13  : ('CCDistanceError',      'Could not resolve overcuts by removing moves'),
    14  : ('CCNoIntersectError',   'Could not find intersection of compensated paths'),
    15  : ('CCNoMovesError',       'No compensated moves between lead-in and lead-out moves'),
    16  : ('RunTimeError',         'Insufficient move calculation time'),
    17  : ('InPosTimeOutError',    'Exceeded specified time limit for in-position'),
    18  : ('LHNumMotorsError',     'Mismatch between # of motors used and # in lookahead buffer'),
    32  : ('SoftLimitError',       'Stopped from exceeding software position limit'),
    64  : ('RadiusErrorbit_0',     'Radius error in X/Y/Z-space circle move'),
    128 : ('RadiusErrorbit_1',     'Radius error in XX/YY/ZZ-space circle move'),

    # 19-31   Reserved for future use
    # 33-63   Reserved for future use
    # 65-127  Reserved for future use
}


motor_status = ['ServoCtrl',
                'TriggerMove',
                'HomeInProgress',
                'MinusLimit',
                'PlusLimit',
                'FeWarn',
                'FeFatal',
                'FeFatal',
                'LimitStop',
                'AmpFault',
                'SoftMinusLimit',
                'SoftPlusLimit',
                'I2tFault',
                'TriggerNotFound',
                'AmpWarn',
                'HomeComplete',

                'DesVelZero',
                'ClosedLoop',
                'AmpEna',
                'InPos',
                'BlockRequest',
                'PhaseFound',
                'TriggerSpeedSel',
                'GantryHomed',
                'SpindleMotor',
                'Csolve',
                'SoftLimit',
                'DacLimit',
                'BlDir',
                'EncLoss',
                ]

motor_normal = {'ServoCtrl': 1,
                'TriggerMove': 0,
                'HomeInProgress': 0,
                'MinusLimit': 0,
                'PlusLimit': 0,
                'FeWarn': 0,
                'FeFatal': 0,
                'LimitStop': 0,
                'AmpFault': 0,
                'SoftMinusLimit': 0,
                'SoftPlusLimit': 0,
                'I2tFault': 0,
                'TriggerNotFound': 0,
                'AmpWarn': 0,
                'HomeComplete': 1,

                'DesVelZero': 1,
                'ClosedLoop': 0,
                'AmpEna': 0,
                'InPos': 1,
                'BlockRequest': 0,
                'PhaseFound': 0,
                'TriggerSpeedSel': 0,
                'GantryHomed': 0,
                'SpindleMotor': 0,
                'Csolve': 1,
                'SoftLimit': 0,
                'DacLimit': 0,
                'EncLoss': 0,
                }

coord_status = ['TriggerMove',
                'HomeInProgress',
                'MinusLimit',
                'PlusLimit',
                'FeWarn',
                'FeFatal',
                'LimitStop',
                'AmpFault',
                'SoftMinusLimit',
                'SoftPlusLimit',
                'I2tFault',
                'TriggerNotFound',
                'AmpWarn',
                'EncLoss',
                'TimerEnabled',
                'HomeComplete',
                'DesVelZero',
                'ClosedLoop',
                'AmpEna',
                'InPos',
                'BlockRequest',
                'TimersEnabled',
                'ErrorStatus',
                'Csolve',
                'LinToPvtBuf',
                'FeedHold',
                'BlockActive',
                'ContMotion',
                'CCMode',
                'MoveMode',
                'SegMove',
                'SegMoveAccel',
                'SegMoveDecel',
                'SegEnabled',
                'SegStopReq',
                'LookAheadWrap',
                'LookAheadLookBack',
                'LookAheadDir',
                'LookAheadStop',
                'LookAheadChange',
                'LookAheadReCalc',
                'LookAheadFlush',
                'LookAheadActive',
                'CCAddedArc',
                'CCOffReq',
                'CCMoveType',
                'CC3Active',
                'SharpCornerStop',
                'AddedDwellDis',
                'ProgRunning',
                'ProgActive',
                'ProgProceeding',
                ]


coord_normal = {'TriggerMove': 0,
                'HomeInProgress': 0,
                'MinusLimit': 0,
                'PlusLimit': 0,
                'FeWarn': 0,
                'FeFatal': 0,
                'LimitStop': 0,
                'AmpFault': 0,
                'SoftMinusLimit': 0,
                'SoftPlusLimit': 0,
                'I2tFault': 0,
                'TriggerNotFound': 0,
                'AmpWarn': 0,
                'EncLoss': 0,
                'TimerEnabled': 0,
                'HomeComplete': 1,
                'DesVelZero': 1,
                'ClosedLoop': 1,
                'AmpEna': 1,
                'InPos': 1,
                'BlockRequest': 1,
                'TimersEnabled': 1,
                'ErrorStatus': 0,
                'Csolve': 1,
                'LinToPvtBuf': 0,
                'FeedHold': 0,
                'BlockActive': 0,
                'ContMotion': 0,
                'CCMode': 0,
                'MoveMode': 0,
                'SegMove': 0,
                'SegMoveAccel': 0,
                'SegMoveDecel': 0,
                'SegEnabled': 0,
                'SegStopReq': 0,
                'LookAheadWrap': 0,
                'LookAheadLookBack': 0,
                'LookAheadDir': 0,
                'LookAheadStop': 0,
                'LookAheadChange': 0,
                'LookAheadReCalc': 0,
                'LookAheadFlush': 0,
                'LookAheadActive': 0,
                'CCAddedArc': 0,
                'CCOffReq': 0,
                'CCMoveType': 0,
                'CC3Active': 0,
                'SharpCornerStop': 0,
                'AddedDwellDis': 1,
                'ProgRunning': 0,
                'ProgActive': 0,
                'ProgProceeding': 0,
                }


# Part numbers to string identifiers, compiled from the documentation
parts = {
    # Gate 3
    604002: 'ACC24E3',
    604017: 'ACC5E3',
    604027: 'ACC59E3',
    604030: 'PowerBrick',

    # Gate 2
    603437: 'ACC5E',

    # Gate 1
    603441: 'ACC24E2S',

    # Gate IO
    603404: 'ACC28E',
    603603: 'ACC11C',
    603474: 'ACC14E',
    603575: 'ACC65E',
    603576: 'ACC66E',
    603577: 'ACC67E',
    603595: 'ACC68E',
    }


part_types = {0: 'Servo',
              1: 'MACRO',
              2: 'Analog I/O',
              3: 'Digital I/O',
              }

PWM_FREQ_HZ = 117964800.0
PWM_FREQ_KHZ = PWM_FREQ_HZ / 1000.0
MAX_SERVO_DIVIDER = 16
MAX_PWM_DIVIDER = 8
